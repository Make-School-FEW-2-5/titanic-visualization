{"version":3,"sources":["logo.svg","Circle.js","helperFunctions.js","Visualization.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Bubble","styled","div","withConfig","displayName","componentId","props","size","children","type","vwMultiplier","color","Circle","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","react_default","a","createElement","assign","ref","bubble","number","Component","filterBy","data","fieldName","value","filter","passenger","fields","filterTwiceBy","fieldName1","value1","Button","button","men","Visualization","handleClick","e","toggle","target","innerHTML","setState","length","Circle_Circle","getCircleData","onClick","App","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","json","wrap","_context","prev","next","axios","get","sent","stop","className","Visualization_Visualization","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0871cd24.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.36c59f02.svg\";","import React, { Component } from 'react'\nimport styled from 'styled-components/macro'\n\nconst vwMultiplier = 50;\n\nconst Bubble = styled.div`\n  border-radius: 50%;\n  width: ${props => props.size * vwMultiplier + 'vw'};\n  height: ${props =>  props.size * vwMultiplier + 'vw'};\n  position:  ${props => props.children.type? 'relative': 'absolute'};\n  left: ${props => props.children.type? '0':vwMultiplier / 2 - (props.size * vwMultiplier / 2) + 'vw'};\n  top: ${props => props.children.type? '0':vwMultiplier / 2 - (props.size * vwMultiplier / 2) + 'vw'};\n  background-color: ${props => props.color || 'red'};\n  text-align: center;\n  line-height:${props => props.size * vwMultiplier + 'vw'};\n  transition: 1000ms;\n  box-shadow: 0px 10px 40px -12px rgba(0,0,0,0.75);\n  `\n\n\nexport default class Circle extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       \n    }\n  }\n  \n  render() {\n    return (\n      <Bubble {...this.props} ref={ref => this.bubble = ref}>\n        {this.props.children || this.props.number}\n      </Bubble>\n    )\n  }\n}\n\n","export const filterBy = (data, fieldName, value) => {\n  return data.filter(passenger => \n    passenger.fields[fieldName] == value\n  )\n}\n\nexport const filterTwiceBy = (data, fieldName, value, fieldName1, value1) => {\n  return data.filter(passenger => \n    passenger.fields[fieldName] == value\n  ).filter(passenger => \n    passenger.fields[fieldName1] == value1\n  )\n}\n\nexport const getMaxMin = (data, fieldName) => {\n  return data.reduce((accum, passenger) => {\n    if (passenger.fields[fieldName] > accum.max) {\n      accum.max = passenger.fields[fieldName]\n    }\n    if (passenger.fields[fieldName] < accum.min) {\n      accum.min = passenger.fields[fieldName]\n    }\n    return accum\n  }, {\"max\": data[1].fields[fieldName], \"min\": data[1].fields[fieldName]})\n}\n\nexport const getMaxMinWhere = (data, fieldName, checkField, value) => {\n  const filteredPassengers = data.filter(passenger => \n    passenger.fields[checkField] == value\n    )\n  return filteredPassengers.reduce((accum, passenger) => {\n    if (passenger.fields[fieldName] > accum.max) {\n      accum.max = passenger.fields[fieldName]\n    }\n    if (passenger.fields[fieldName] < accum.min) {\n      accum.min = passenger.fields[fieldName]\n    }\n    return accum\n  }, {\"max\": data[1].fields[fieldName], \"min\": data[1].fields[fieldName]})\n}","import React, { Component } from 'react'\nimport styled from 'styled-components/macro'\n\nimport Circle from './Circle';\nimport { filterTwiceBy, filterBy } from './helperFunctions'\n\nconst Button = styled.button`\n  margin: 40px auto;\n  width: 25%;\n  height: 32px;\n  border: none;\n  border-radius: 8px;\n  background-color: ${props => props.men? 'Plum': 'PaleTurquoise'};\n  transition: 1000ms;\n`\n\n\nexport default class Visualization extends Component {\n  \n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      toggle: true\n    }\n  }\n\n  getCircleData() {\n    if (this.state.toggle) {\n      return {\n        color: 'PaleTurquoise',\n        number: filterTwiceBy(this.props.data, \"sex\", \"male\", \"survived\", \"Yes\").length,\n        size: filterTwiceBy(this.props.data, \"sex\", \"male\", \"survived\", \"Yes\").length / filterBy(this.props.data, \"sex\", \"male\").length\n      }\n    } else {\n      return {\n        color: 'Plum',\n        number: filterTwiceBy(this.props.data, \"sex\", \"female\", \"survived\", \"Yes\").length,\n        size: filterTwiceBy(this.props.data, \"sex\", \"female\", \"survived\", \"Yes\").length / filterBy(this.props.data, \"sex\", \"female\").length\n      }\n    }\n  }\n  handleClick = (e) => {\n    \n    if (this.state.toggle) {\n      e.target.innerHTML = \"Show Men\"\n      this.setState({toggle: false})\n    } else {\n      e.target.innerHTML = \"Show Women\"\n      this.setState({toggle: true})\n    }\n  }\n  \n  render() {\n    return (\n      <div>\n        <Circle color='gray' number='1' size='1'>\n          <Circle\n          {...this.getCircleData()}\n          />\n        </Circle>\n        <Button men={this.state.toggle} type='button' onClick={(e)=> this.handleClick(e)}>Show Women</Button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components/macro'\n\nimport Circle from './Circle';\nimport Visualization from './Visualization'\n\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       json: '',\n    }\n  }\n\n  componentDidMount = async () => {\n    const json = await axios.get('titanic-passengers.json')\n\n    if(json) {\n    this.setState({\n      json: json.data\n    })\n    }\n  }\n  \n  render() {\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n          {this.state.json &&\n          <div>\n            <Visualization data={this.state.json}/>\n          </div>\n          }\n        </header>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}